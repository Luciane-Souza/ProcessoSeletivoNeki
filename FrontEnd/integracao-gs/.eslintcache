[{"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\index.js":"1","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\App.js":"2","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Header\\index.js":"3","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Header\\styles.js":"4","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Form\\index.js":"5","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Form\\styles.js":"6","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Services\\api.js":"7"},{"size":221,"mtime":1606420956802,"results":"8","hashOfConfig":"9"},{"size":243,"mtime":1606408609027,"results":"10","hashOfConfig":"9"},{"size":333,"mtime":1606402756073,"results":"11","hashOfConfig":"9"},{"size":363,"mtime":1606404425664,"results":"12","hashOfConfig":"9"},{"size":3909,"mtime":1606478157902,"results":"13","hashOfConfig":"9"},{"size":401,"mtime":1606478408271,"results":"14","hashOfConfig":"9"},{"size":122,"mtime":1606478545341,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e0u97o",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\index.js",[],"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\App.js",[],"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Header\\index.js",[],"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Header\\styles.js",[],"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Form\\index.js",["31","32","33","34","35","36","37","38"],"import React,{ useState, useCallback, useEffect } from 'react';\r\nimport 'primeflex/primeflex.css';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Container, Botao } from './styles';\r\nimport '../../styles.css'\r\nimport api from '../../Services/api';\r\n\r\n\r\n\r\nconst Form = () => {\r\n\r\n    const [provedor, setProvedor] = useState([]);\r\n    const [integracao, setIntegracao] = useState([]);\r\n\r\n\r\n    const loadProvedores = useCallback(\r\n        () => {\r\n            api.get('provedor').then((response) => {\r\n                setProvedor(response.data);\r\n                console.log(response.data)\r\n            }).catch((error) => {alert(\"Impossível carregar os provedores.\");});\r\n        }\r\n    );\r\n\r\n\r\n    const loadIntegracao = useCallback(\r\n        () => {\r\n            api.get('integracao').then((response) => {\r\n                setIntegracao(response.data);\r\n                console.log(response.data);\r\n            }).catch((error) => {alert(\"Impossível carregar as integrações.\");});\r\n        }\r\n    );\r\n    \r\n    function integracaoChangeHandler (e, index) {\r\n       \r\n        var integracaoAtual = integracao;\r\n        var integracaoNova = integracaoAtual;\r\n        integracaoAtual.find((integr) => integr.id == index).provedor.id = e.target.value;\r\n        setIntegracao(integracaoNova);\r\n    }\r\n\r\n    function portaChangeHandler(e, index) {\r\n        console.log(e.target.value)\r\n        console.log(index)\r\n        var integracaoAtual = integracao;\r\n        var integracaoNova = integracaoAtual;\r\n        integracaoAtual.find((integr) => integr.id == index).porta = e.target.value;\r\n        setIntegracao(integracaoNova);\r\n        console.log(integracao);\r\n    }\r\n\r\n    function Dropdown(props) {\r\n        if (props.integracao.id != 3) {\r\n            return(\r\n                <select onChange={(e) => integracaoChangeHandler(e, props.integracao.id)}>{props.provedor.map((prov) => <option value={prov.id} selected={props.integracao.provedor.id == prov.id} key={prov.id}>{prov.nome + \" (\" + prov.ip + \")\"}</option>)}</select>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <select disabled ><option selected key={props.integracao.provedor.id}>{props.integracao.provedor.ip}</option>)</select>\r\n            );\r\n        }\r\n    }\r\n\r\n    function Formulario(){\r\n        return (\r\n            integracao.map(\r\n                (integr)=>{\r\n                    return (\r\n                        \r\n                    <div className=\"p-formgroup-inline p-justify-between\">\r\n                        <div className=\"p-field\">\r\n                            <label htmlFor={\"conexao\"+integr.nome} className=\"p-sr-only\">Ip conexão {integr.nome}</label>\r\n                            <Dropdown provedor={provedor} integracao={integr} />\r\n                        </div>\r\n                        <div className=\"p-field\">\r\n                            <label htmlFor={\"porta\"+integr.nome} className=\"p-sr-only\">Porta</label>\r\n                                <InputText id={\"porta\"+integr.nome} type=\"text\" value={integr.porta} onChange={(e) => portaChangeHandler(e, integr.id)}/>\r\n                        </div>\r\n                        \r\n                    </div>)\r\n                }\r\n            )\r\n\r\n\r\n        );\r\n    }\r\n\r\n    function Salvar(){\r\n        integracao.map((integr) => {\r\n            api.put('/integracao/' + integr.id, integr)\r\n            .then((response) => alert(\"Salvo com sucesso!\")) \r\n            .catch((error) => alert(\"Erro ao salvar!\"));      \r\n        \r\n        })\r\n    }\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            loadProvedores();\r\n            loadIntegracao();\r\n        }, []\r\n    )\r\n\r\n    \r\n    return(\r\n        <Container>\r\n          \r\n\r\n            < Formulario/>\r\n           <div id=\"principal\">\r\n           <Botao onClick= {() => Salvar()}>Salvar</Botao>\r\n           </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Form;","C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Components\\Form\\styles.js",[],"C:\\Users\\limag\\Desktop\\Neki\\FrontEnd\\integracao-gs\\src\\Services\\api.js",[],{"ruleId":"39","severity":1,"message":"40","line":16,"column":28,"nodeType":"41","endLine":16,"endColumn":39},{"ruleId":"39","severity":1,"message":"40","line":26,"column":28,"nodeType":"41","endLine":26,"endColumn":39},{"ruleId":"42","severity":1,"message":"43","line":39,"column":52,"nodeType":"44","messageId":"45","endLine":39,"endColumn":54},{"ruleId":"42","severity":1,"message":"43","line":48,"column":52,"nodeType":"44","messageId":"45","endLine":48,"endColumn":54},{"ruleId":"42","severity":1,"message":"46","line":54,"column":33,"nodeType":"44","messageId":"45","endLine":54,"endColumn":35},{"ruleId":"42","severity":1,"message":"43","line":56,"column":184,"nodeType":"44","messageId":"45","endLine":56,"endColumn":186},{"ruleId":"47","severity":1,"message":"48","line":91,"column":33,"nodeType":"49","messageId":"50","endLine":91,"endColumn":35},{"ruleId":"39","severity":1,"message":"51","line":104,"column":12,"nodeType":"52","endLine":104,"endColumn":14,"suggestions":"53"},"react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loadIntegracao' and 'loadProvedores'. Either include them or remove the dependency array.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [loadIntegracao, loadProvedores]",{"range":"57","text":"58"},[3641,3643],"[loadIntegracao, loadProvedores]"]